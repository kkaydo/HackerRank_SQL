--You are given two tables: Students and Grades. Students contains three columns ID, Name and Marks.
Table: Students
+----------+------------+
| ID       | Integer    |
|----------+------------|
| Name     | String     |
|----------+------------|
| Marks    | Integer    |
+----------+------------+
Table: Grades
+----------+------------+
| Grade    | Integer    |
|----------+------------|
| Min_Mark | Integer    |
|----------+------------|
| Max_Mark | Integer    |
+----------+------------+
/*
Ketty gives Eve a task to generate a report containing three columns: Name, Grade and Mark. Ketty doesn't want 
the NAMES of those students who received a grade lower than 8. The report must be in descending order by grade 
-- i.e. higher grades are entered first. If there is more than one student with the same grade (8-10) assigned to them, 
order those particular students by their name alphabetically. Finally, if the grade is lower than 8, use "NULL" as their 
name and list them by their grades in descending order. If there is more than one student with the same grade (1-7) assigned 
to them, order those particular students by their marks in ascending order.
*/

pseudocode:
-- IF function to seperate grade below/greater 8 (mySQL)
-- Case (MS SQL Server)
-- merge two table by the range of Min_mark and Max_mark
-- LEFT JOIN 
-- ON, BETWEEN min AND max

code: MYSQL
SELECT 
IF(g.Grade <8, NULL, s.Name) AS proc_name,
g.Grade,
s.Marks
FROM Students s LEFT JOIN Grades g 
ON s.Marks BETWEEN g.Min_Mark AND g.Max_Mark
ORDER BY g.Grade DESC, s.Name ASC, s.Marks ASC;

code: MS SQL Server
SELECT 
CASE 
    WHEN g.Grade <8 THEN NULL
    ELSE s.Name END AS proc_name,
g.Grade,
s.Marks
FROM Students s LEFT JOIN Grades g 
ON s.Marks BETWEEN g.Min_Mark AND g.Max_Mark
ORDER BY g.Grade DESC, proc_name ASC, s.Marks ASC;

